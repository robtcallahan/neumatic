#! /bin/bash
#
# websocketd    Implementation of web sockets
#
# description:  websocketd runs neumatic_status.php gets stats and metrics from a variety
#               of sources and prints the output while listening on 8433.
# processname: websocketd
# pidfile: /var/run/websocketd.pid
#
### BEGIN INIT INFO
# Provides: websocketd
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Should-Start: $syslog $named
# Should-Stop: $syslog $named
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop websocketd
# Description: websocketd runs neumatic_status.php gets stats and metrics from a variety
#              of sources and prints the output while listening on 8433.
#
### END INIT INFO

# processname:  websocketd
# pidfile:      /var/run/websocketd.pid

# Source function library.
. /etc/rc.d/init.d/functions

WEBSOCKETD=/usr/local/bin/websocketd
PROGRAM=/opt/neumatic/vendor/websocketd/bin/neumatic_status.php
PORT=8443
SSLCERT=/etc/httpd/certs/ops.neustar.biz.crt
SSLKEY=/etc/httpd/certs/ops.neustar.biz.key
ADDRESS=localhost

WEBSOCKETD_OPTS="--port=$PORT --ssl --sslcert=$SSLCERT --sslkey=$SSLKEY --address=$ADDRESS $PROGRAM"

RETVAL=0

# See how we were called.
case "$1" in
  start)
        [ "$EUID" != "0" ] && exit 4
        [ -x "$WEBSOCKETD" ] || exit 5
        echo -n "Starting websocketd: "
        # daemon function does not work. fails to put into the background
        # TODO: get daemon function to work
        #daemon $WEBSOCKETD $WEBSOCKETD_OPTS >/var/log/websocketd.log 2>&1
        nohup $WEBSOCKETD $WEBSOCKETD_OPTS >/var/log/websocketd.log 2>&1 &
        success
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch /var/lock/subsys/websocketd
        ;;
  stop)
        echo -n "Stopping websocketd: "
        killproc websocketd
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f /var/lock/subsys/websocketd
        PID=`ps -ef | grep neumatic_status.php | grep -v grep | awk '{print $2}'`
        [ ! -z "$PID" ] && kill $PID
        ;;
  restart)
        $0 stop
        $0 start
        RETVAL=$?
        ;;
  status)
        status websocketd
        RETVAL=$?
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac
